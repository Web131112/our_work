分析对比你喜欢和不喜欢的Web应用
吕蓉
13111207
西安电子科技大学软件学院
摘要
	Web应用已经成为了人们日常生活工作所需的必需品，它的种类繁多，有一些web应用非常出名，小到例如腾讯QQ的空间，大到大型的网站如亚马逊，都是很厉害的web应用。本文讨论我所喜欢的一个web应用：腾讯网，和一个不喜欢的web应用：12306铁路订票官方网站，说明喜欢和不喜欢的原因，最后提出一些关于怎么开发web应用的建议。

关键字
　　Web应用，腾讯，12306铁路订票官方网站
　　
介绍
　　腾讯网是一个很好的门户网站，它以QQ的庞大年轻用户为主，涵盖服务种类广泛，它包含腾讯新闻、腾讯视频、腾讯微博、腾讯游戏、腾讯企业邮箱和腾讯地图等广为人所用的大型服务网页，涉猎的范围极广，而且做的都让用户感觉非常舒服吸引到了广大的用户群。
　　12306是一个我必须要用，但是不太喜欢的web应用。它是唯一的铁路订票的官方网站，但是它做的却不尽如人意，存在巨大的漏洞可以让黄牛把票抢走。而且它的输入始发地和目的地的文本框不是很方便，用户输入的文字和出现的下拉菜单的第一项大多不匹配，这导致了没有熟练使用的用户抢票的速度降低。
　　
分析
2.1——腾讯网
　　腾讯是目前最受欢迎的一家公司，不管是他们开发出的全民所用的腾讯QQ软件，还是演艺圈的明星和普通百姓都常用的腾讯微博，再到腾讯首页的新闻，都是非常强大的。我们主要讨论的是web上的应用，所以我用腾讯网首页来说明它的好处。
　　首先，进入腾讯网给人的第一印象就是很清爽简洁，没有多余的小弹窗广告，字体大小刚合适。布局非常合理：顶部是搜狗搜索，它的下面是新闻的分类标签，再下面就是各类新闻。不像搜狐等一些网站，新闻和搜索框穿插着排版，后面的一些其他网站的入口，比如京东也放在新闻的中间，给人一种很乱的感觉。
　　我们必须承认这样一个事实：腾讯门户网站的浏览量已经超越新浪成为第一，虽然它的广告远远不及新浪、网易，但是由于腾讯有庞大的年轻用户群体，只要是使用QQ的人，就可以在登录QQ之后，自动打开腾讯网迷你版，就可以很方便的查看新闻，而且因为这一便利条件，很多人都不再专门去网易等网站查看新闻了。
　　当然，腾讯面对的群体主要还集中在年轻人，这就使得它的内容有点偏娱乐和“幼稚”，但是对于我们这些学生来说，腾讯所能提供的社会、政治、文化等方面的内容已经足够满足我们的需要了，所以我还是更喜欢腾讯一些。
　　
2.2——12306铁路官方订票网站
12306是铁路订票的官方网站，除了这个网站之外，没有和它竞争的网站，
并且由于铁路是国营，这就导致了它的可用性比较低。当然，为了方便地订票，我们只能选择使用它，不然就得去窗口排队或者使用电话订票并在24小时之内取票。但是12306有做的几点不好的方面，我想指出。
	首先是比较容易看出来的一些问题：比如我们在订票的时候，当你输入一个始发地，比如“北京”，再点击回车，这个文本框就会出现一个下拉菜单，第一项是“北京北”，第三项才是“北京”。如果是使用12306不熟练的用户，很有可能会需要重复输入好几遍，甚至还需要用鼠标去点击，这就耽误了购票的时间，毕竟我们抢票的时候都是希望系统在一放票的时候我们就赶紧抢票的。
	还有一点就是12306首页上铁路信息和放票时间信息等新闻不是很显眼，没有一个具体的分类。比如我们需要定一张从西安到北京的车票，需要查询放票时间，但是这个信息不是很容易就能查到，很有可能耽误了用户买票。我认为12306首页上应该讲新闻分类，并将重要信息着重标注，便于用户查看。
	我认为12306还有一点小小的瑕疵，就是余票查询和购票分开了，我认为这完全没有必要，可以在“购票”里直接显示出余票，让用户再在“余票查询”里面才能查询到余票无疑是很费事的。
	最后可能会有一个比较深层次的问题，就是黄牛的抢票问题。在今年初的新闻上我看到黄牛抢票的新招，就是使用抢票软件，比如360刷票二代，当然这个问题12306已经启动方案把它解决了，但是我们不免要想一个深层次的问题：现在的火车票预订都是实名制，需要身份验证，那么黄牛抢票使用什么身份信息来购票的呢？经过调查，12306并没有将购票用户的身份证与公安机关联网进行核查，这就使得即使输入19个0，也可以进行购票了，但是这个问题不是很容易解决的，毕竟这涉及到多方面的问题。
	当然不能说12306没有可取之处，它的出现，无疑使得铁路购票更新换代，节省了大批的人力物力，是一个很有利的革新，相信经过发展，它一定会变得越来越方便用户的体验。

结论
　　对于一个web应用的好坏，不能单纯的按照是否喜欢来划分，毕竟不同的应用有不同的用户群体。但是我们在开发一个web应用的时候，必须要注意细节，否则这将直接影响用户的体验。
　　根据我目前的知识，我认为开发一个web应用首先需要分析需求；其次是设计模型；然后是选择一个一个优秀的开源的web应用开发框架进行开发，根据你想做什么类型的应用来选择；最后就可以发布了，进行后续的维护工作。
